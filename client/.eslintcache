[{"C:\\Users\\1867792\\up_pro\\client\\src\\index.js":"1","C:\\Users\\1867792\\up_pro\\client\\src\\App.js":"2","C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\index.js":"3","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Terms\\Terms.js":"5","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Home\\Home.js":"6","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Claim\\Claim.js":"7","C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\ResetPasswordScreen.js":"8","C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\LoginScreen.js":"9","C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\RegisterScreen.js":"10","C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\ForgotPasswordScree.js":"11","C:\\Users\\1867792\\up_pro\\client\\src\\components\\PostDetails\\PostDetails.jsx":"12","C:\\Users\\1867792\\up_pro\\client\\src\\components\\CreatorOrTag\\CreatorOrTag.jsx":"13","C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\posts.js":"14","C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\claim.js":"15","C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\auth.js":"16","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Navbar\\styles.js":"17","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Home\\styles.js":"18","C:\\Users\\1867792\\up_pro\\client\\src\\constants\\actionTypes.js":"19","C:\\Users\\1867792\\up_pro\\client\\src\\actions\\posts.js":"20","C:\\Users\\1867792\\up_pro\\client\\src\\actions\\claim.js":"21","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\Posts.js":"22","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Form\\Form.js":"23","C:\\Users\\1867792\\up_pro\\client\\src\\components\\PostDetails\\styles.js":"24","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Pagination.jsx":"25","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Pdf\\Pdf.js":"26","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\Post\\Post.js":"27","C:\\Users\\1867792\\up_pro\\client\\src\\components\\PostDetails\\CommentSection.jsx":"28","C:\\Users\\1867792\\up_pro\\client\\src\\api\\index.js":"29","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\styles.js":"30","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Form\\styles.js":"31","C:\\Users\\1867792\\up_pro\\client\\src\\components\\styles.js":"32","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\Post\\styles.js":"33","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Upload.js":"34"},{"size":632,"mtime":1669539956638,"results":"35","hashOfConfig":"36"},{"size":2105,"mtime":1669539956619,"results":"37","hashOfConfig":"36"},{"size":200,"mtime":1669539956639,"results":"38","hashOfConfig":"36"},{"size":2102,"mtime":1669539956625,"results":"39","hashOfConfig":"36"},{"size":2430,"mtime":1669539956631,"results":"40","hashOfConfig":"36"},{"size":3424,"mtime":1669539956625,"results":"41","hashOfConfig":"36"},{"size":3210,"mtime":1669539956622,"results":"42","hashOfConfig":"36"},{"size":2697,"mtime":1669539956636,"results":"43","hashOfConfig":"36"},{"size":2538,"mtime":1669539956635,"results":"44","hashOfConfig":"36"},{"size":4287,"mtime":1669539956635,"results":"45","hashOfConfig":"36"},{"size":1913,"mtime":1669539956633,"results":"46","hashOfConfig":"36"},{"size":3661,"mtime":1669541643970,"results":"47","hashOfConfig":"36"},{"size":1441,"mtime":1669539956623,"results":"48","hashOfConfig":"36"},{"size":1540,"mtime":1669541742553,"results":"49","hashOfConfig":"36"},{"size":325,"mtime":1669539956638,"results":"50","hashOfConfig":"36"},{"size":542,"mtime":1669539956638,"results":"51","hashOfConfig":"36"},{"size":1411,"mtime":1669539956626,"results":"52","hashOfConfig":"36"},{"size":449,"mtime":1669539956625,"results":"53","hashOfConfig":"36"},{"size":499,"mtime":1669541389283,"results":"54","hashOfConfig":"36"},{"size":2864,"mtime":1669541874203,"results":"55","hashOfConfig":"36"},{"size":317,"mtime":1669539956620,"results":"56","hashOfConfig":"36"},{"size":842,"mtime":1669539956629,"results":"57","hashOfConfig":"36"},{"size":4545,"mtime":1669539956623,"results":"58","hashOfConfig":"36"},{"size":1115,"mtime":1669539956628,"results":"59","hashOfConfig":"36"},{"size":1017,"mtime":1669539956626,"results":"60","hashOfConfig":"36"},{"size":1250,"mtime":1669539956627,"results":"61","hashOfConfig":"36"},{"size":4268,"mtime":1669539956628,"results":"62","hashOfConfig":"36"},{"size":2001,"mtime":1669539956627,"results":"63","hashOfConfig":"36"},{"size":1244,"mtime":1669541518965,"results":"64","hashOfConfig":"36"},{"size":1488,"mtime":1669539956629,"results":"65","hashOfConfig":"36"},{"size":473,"mtime":1669539956623,"results":"66","hashOfConfig":"36"},{"size":175,"mtime":1669539956636,"results":"67","hashOfConfig":"36"},{"size":1168,"mtime":1669539956629,"results":"68","hashOfConfig":"36"},{"size":289,"mtime":1669539956632,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d2m9gb",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\1867792\\up_pro\\client\\src\\index.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\App.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\index.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Navbar\\Navbar.js",["148"],"import React, { useState, useEffect } from 'react';\r\nimport AppBar  from '@mui/material/AppBar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Toolbar  from '@mui/material/Toolbar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button  from '@mui/material/Button';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { classes }  = useStyles();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    navigate('/login');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <Link to=\"/\" className={classes.brandContainer}>\r\n      <Typography variant='h2' >Wits</Typography>\r\n      </Link>\r\n     <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.username} src={user?.result.imageUrl}>{user?.result.username.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.username}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/login\" variant=\"contained\" color=\"primary\">Login or sign in </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Terms\\Terms.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Home\\Home.js",["149"],"import React, { useState} from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Grow from '@mui/material/Grow';\r\nimport Grid from '@mui/material/Grid';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { MuiChipsInput } from 'mui-chips-input';\r\nimport { getPostsBySearch } from '../../actions/posts';\r\nimport Posts from '../Posts/Posts';\r\nimport Pagination from '../Pagination';\r\nimport useStyles from './styles';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nconst Home = () => {\r\n  const { classes } = useStyles();\r\n  const query = useQuery();\r\n  const page = query.get('page') || 1;\r\n  const searchQuery = query.get('searchQuery');\r\n\r\n \r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const searchPost = () => {\r\n    if (search.trim() || tags) {\r\n      dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\r\n      navigate(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  };\r\n/* \r\n  useEffect(() => {\r\n      dispatch(getPostsBySearch(search));\r\n  },[search]);  */\r\n\r\n const handleKeyPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      searchPost();\r\n    }\r\n  };  \r\n\r\n  const handleAddChip = (tag) => setTags([...tags, tag]);\r\n\r\n  const handleDeleteChip = (chipToDelete) => setTags(tags.filter((tag) => tag !== chipToDelete));\r\n\r\n  const upload = () => {\r\n    navigate(\"/uploading\")\r\n  }\r\n\r\n  return (\r\n    <Grow in>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} className={classes.gridContainer}>\r\n          <Grid item xs={12} sm={6} md={9}>\r\n            <Posts setCurrentId={setCurrentId} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\">\r\n             \r\n              <TextField \r\n              onKeyDown={handleKeyPress} \r\n              name=\"search\" \r\n              variant=\"outlined\" \r\n              label=\"Search title or name\" \r\n              fullWidth \r\n              value={search} \r\n              onChange={(e) => setSearch(e.target.value)} />\r\n              \r\n              <MuiChipsInput\r\n                style={{ margin: '10px 0' }}\r\n                value={tags}\r\n                onAddChip={handleAddChip}\r\n                onDeleteChip={handleDeleteChip}\r\n                label=\"Search by tag\"\r\n                variant=\"outlined\"\r\n              /> \r\n\r\n              <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">Search</Button>\r\n\r\n        </AppBar>\r\n         <button onClick={upload} >Upload material</button>\r\n            {(\r\n              !searchQuery && !tags.length) && (\r\n              <Paper className={classes.pagination} elevation={6}>\r\n                <Pagination page={page} />\r\n              </Paper>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\1867792\\up_pro\\client\\src\\components\\Claim\\Claim.js",["150"],"import React, {useState} from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Typography  from '@mui/material/Typography';\r\nimport Paper  from '@mui/material/Paper';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { claim } from '../../actions/claim';\r\n\r\nconst Claim = () => {\r\n  const [claimData, setClaimData] = useState({\r\n    firstName: '', lastName: '', email: '', amount: '', bankName: '', accountNumber: '', typeOfAccount: ''\r\n  });\r\nconst dispatch = useDispatch();\r\nconst navigate = useNavigate();\r\n\r\n\r\nconst clear = () => {\r\n  setClaimData({   firstName: '', lastName: '', email: '', amount: '', bankName: '', accountNumber: '', typeOfAccount: ''})\r\n}\r\n\r\n const Submit = (e) => {\r\n    e.preventDefault();\r\n      dispatch(claim(claimData));\r\n     clear();\r\n     return (\r\n      <div>\r\n        \"Thank you, your claim is being processed\"\r\n      </div>\r\n     )\r\n};\r\n\r\n  return (\r\n    <Paper elevation={6} >\r\n      <Typography variant='h6' >Claiming here</Typography>\r\n\r\n      <form autoComplete='off' onSubmit={Submit} >\r\n      <TextField \r\n        name=\"fistName\" \r\n        variant=\"outlined\" \r\n        label=\"First Name\" \r\n        required\r\n        fullWidth \r\n       value={claimData.firstName} \r\n       onChange={(e) => setClaimData({...claimData, firstName:e.target.value})}\r\n         />\r\n\r\n      <TextField \r\n        name=\"lastName\" \r\n       variant=\"outlined\" \r\n        label=\"Last Name\" \r\n        required\r\n        fullWidth \r\n        value={claimData.lastName} \r\n        onChange={(e) => setClaimData({...claimData, lastName:e.target.value})}\r\n         />\r\n      \r\n       <TextField \r\n        name=\"email\" \r\n       variant=\"outlined\" \r\n        label=\"Email\" \r\n        type=\"email\"\r\n        required\r\n        fullWidth \r\n        value={claimData.email} \r\n       onChange={(e) => setClaimData({...claimData, email:e.target.value})}\r\n         />\r\n\r\n         <TextField \r\n        name=\"amount\" \r\n        variant=\"outlined\" \r\n        label=\"Amount\" \r\n        required\r\n        fullWidth \r\n        value={claimData.amount} \r\n        onChange={(e) => setClaimData({...claimData, amount:e.target.value})}\r\n         />\r\n         <TextField \r\n        name=\"bankName\" \r\n        variant=\"outlined\" \r\n        label=\"Name of the bank\"\r\n        required \r\n        fullWidth \r\n        value={claimData.bankName} \r\n       onChange={(e) => setClaimData({...claimData, bankName:e.target.value})}\r\n         />\r\n         <TextField \r\n        name=\"accountNumber\" \r\n        variant=\"outlined\" \r\n        label=\"Account Number\" \r\n        required\r\n        fullWidth \r\n        value={claimData.accountNumber} \r\n        onChange={(e) => setClaimData({...claimData, accountNumber:e.target.value})}\r\n         />\r\n    <TextField \r\n        name=\"typeOfAccount\" \r\n        variant=\"outlined\" \r\n        label=\"Type of Account\" \r\n        required\r\n        fullWidth \r\n        value={claimData.typeOfAccount} \r\n        onChange={(e) => setClaimData({...claimData, typeOfAccount:e.target.value})}\r\n         />\r\n       <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Claim","C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\ResetPasswordScreen.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\LoginScreen.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\RegisterScreen.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\screens\\ForgotPasswordScree.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\PostDetails\\PostDetails.jsx",["151","152","153","154"],"import React, { useEffect } from 'react';\r\nimport  Paper from '@mui/material/Paper';\r\nimport  Typography from '@mui/material/Typography';\r\nimport  CircularProgress from '@mui/material/CircularProgress';\r\nimport  Divider from '@mui/material/Divider';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\nimport CommentSection from './CommentSection';\r\nimport Pdf from '../Pdf/Pdf';\r\nimport useStyles from './styles';\r\n\r\nconst Post = () => {\r\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { classes } = useStyles();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n    }\r\n  }, [post]);\r\n\r\n  if (!post) return null;\r\n\r\n  const openPost = (_id) => navigate(`/posts/${_id}`);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper elevation={6} className={classes.loadingPaper}>\r\n        <CircularProgress size=\"7em\" />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n\r\n  return (\r\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n      <div className={classes.card}>\r\n        <div className={classes.section}>\r\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\r\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography> \r\n          <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n          <Typography variant=\"h6\">\r\n            Created by:\r\n            <Link to={`/creators/${post.name}`} style={{ textDecoration: 'none', color: '#3f51b5' }}>\r\n              {` ${post.name}`}\r\n            </Link>\r\n          </Typography>\r\n          <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n          <Divider style={{ margin: '20px 0' }} />\r\n          <Divider style={{ margin: '20px 0' }} />\r\n         <CommentSection post={post} />\r\n        \r\n          \r\n <Divider style={{ margin: '20px 0' }} />\r\n        </div>\r\n      {/*   <div className={classes.imageSection}>\r\n          <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n        </div> */}\r\n      </div>\r\n\r\n<Pdf />\r\n\r\n   {/*     {!!recommendedPosts.length && (\r\n        <div className={classes.section}>\r\n<Typography gutterBottom variant=\"h5\">You might also like:</Typography>\r\n          <Divider />\r\n          <div className={classes.recommendedPosts}>\r\n            {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\r\n              <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                <Typography gutterBottom variant=\"h6\">{title}</Typography>\r\n                <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\r\n                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\r\n                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\r\n                <img src={selectedFile} alt='' width=\"200px\" />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )} */}\r\n    </Paper>\r\n  );\r\n}; \r\n\r\nexport default Post;","C:\\Users\\1867792\\up_pro\\client\\src\\components\\CreatorOrTag\\CreatorOrTag.jsx",["155"],"import React, { useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport  Typography from '@mui/material/Typography';\r\nimport  CircularProgress from '@mui/material/CircularProgress';\r\nimport  Grid  from '@mui/material/Grid';\r\nimport Divider  from '@mui/material/Divider';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Post from '../Posts/Post/Post';\r\nimport { getPostsByCreator, getPostsBySearch } from '../../actions/posts';\r\n\r\nconst CreatorOrTag = () => {\r\n  const { name } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname.startsWith('/tags')) {\r\n      dispatch(getPostsBySearch({ tags: name }));\r\n    } else {\r\n      dispatch(getPostsByCreator(name));\r\n    }\r\n  }, []);\r\n\r\n  if (!posts.length && !isLoading) return 'No postings';\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h2\">{name}</Typography>\r\n      <Divider style={{ margin: '20px 0 50px 0' }} />\r\n      {isLoading ? <CircularProgress /> : (\r\n        <Grid container alignItems=\"stretch\" spacing={3}>\r\n          {posts?.map((post) => (\r\n            <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\r\n              <Post post={post} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatorOrTag;","C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\posts.js",["156"],"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT} from '../constants/actionTypes';\r\n\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'START_LOADING':\r\n      return { ...state, isLoading: true };\r\n    case 'END_LOADING':\r\n      return { ...state, isLoading: false };\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n    case FETCH_BY_SEARCH:\r\n    case FETCH_BY_CREATOR:\r\n      return { ...state, posts: action.payload.data };\r\n    case FETCH_POST:\r\n      return { ...state, post: action.payload.post };\r\n    case LIKE:\r\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n    case COMMENT:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post._id === +action.payload._id) {\r\n            return action.payload;\r\n          }\r\n          return post;\r\n        }),\r\n      };\r\n    case CREATE:\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    case UPDATE:\r\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n    case DELETE:\r\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\claim.js",["157"],"/* \r\nexport default (state, action) => {\r\n      switch(action.type) {\r\n        case 'CLAIM': \r\n        return{...state}\r\n      }\r\n};\r\n */\r\n\r\n export default (claims = [], action) => {\r\n  switch(action.type) {\r\n    case 'CLAIM':\r\n      return [...claims, action.payload];\r\n     default:\r\n        return claims;\r\n  }\r\n };\r\n\r\n\r\n","C:\\Users\\1867792\\up_pro\\client\\src\\reducers\\auth.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Home\\styles.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\actions\\posts.js",["158"],"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, RATE,  COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n\r\n    const { data } = await api.fetchPost(id);\r\n\r\n    dispatch({ type: FETCH_POST, payload: { post: data } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostsByCreator = (name) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchPostsByCreator(name);\r\n\r\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n\r\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (post, navigate) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n\r\n    navigate(`/posts/${data._id}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  try {\r\n    const { data } = await api.likePost(id, user?.token);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const commentPost = (value, id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.comment(value, id);\r\n\r\n    dispatch({ type: COMMENT, payload: data });\r\n\r\n    return data.comments;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};","C:\\Users\\1867792\\up_pro\\client\\src\\actions\\claim.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Form\\Form.js",["159"],"import React, { useState, useEffect } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '', price: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const { classes } = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const navigate = useNavigate();\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ title: '', message: '',  selectedFile: '' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!post?.title) clear();\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost({ ...postData, name: user?.result?.username }, navigate));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.username }));\r\n      clear();\r\n    }\r\n};\r\n\r\n \r\n\r\n  if (!user?.result?.username) {\r\n    return (\r\n      <Paper className={classes.paper} elevation={6}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Sign in to upload\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\nconst element = <Typography variant='h8'>I agree to the <Box component={Link} to=\"/termsandconditions\">terms and conditions</Box> </Typography>\r\n\r\n const handleChange = (event) => {\r\n  setChecked(event.target.checked);\r\n};\r\n\r\nconst formChange = (e) => {\r\nsetPostData(prevPostData => {\r\n  return {\r\n    ...prevPostData, [e.target.name]: e.target.value\r\n  }\r\n})\r\n};\r\n\r\nconst disabled = !checked\r\n \r\n  return (\r\n    <Paper className={classes.paper} elevation={6}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post?.title}\"` : 'Creating '}</Typography>\r\n       \r\n       \r\n        <TextField \r\n        name=\"title\" \r\n        variant=\"outlined\" \r\n        label=\"Title\" \r\n        fullWidth \r\n        value={postData.title} \r\n        onChange={formChange}\r\n         />\r\n        \r\n        <TextField \r\n        name=\"message\" \r\n        variant=\"outlined\" \r\n        label=\"Message\" \r\n        fullWidth\r\n        multiline \r\n        minRows={4} \r\n        value={postData.message} \r\n        onChange={formChange} \r\n        />\r\n        <div style={{ padding: '5px 0', width: '94%' }}>\r\n        \r\n         <TextField\r\n            name=\"tags\"\r\n            variant=\"outlined\"\r\n            label=\"Tags\"\r\n            fullWidth\r\n           value={postData.tags}\r\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} \r\n              />\r\n        </div>\r\n        <TextField \r\n        name=\"price\" \r\n        variant=\"outlined\" \r\n        label=\"Price\" \r\n        id=\"price\"\r\n        fullWidth \r\n        value={postData.price} \r\n        onChange={formChange}\r\n         />\r\n       <div className={classes.fileInput}>\r\n          <FileBase type=\"file\" \r\n          multiple={false} \r\n          onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\r\n          </div>\r\n\r\n           <FormControlLabel\r\n            value=\"end\"\r\n            control={ <Checkbox\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            inputProps={{ 'aria-label': 'controlled' }}\r\n          /> }\r\n          label={element}\r\n          labelPlacement=\"end\"\r\n        /> \r\n <Typography variant='h8'> </Typography>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" disabled={disabled} color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Upload</Button>\r\n      </form>\r\n  </Paper>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Form;\r\n//  <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>","C:\\Users\\1867792\\up_pro\\client\\src\\components\\PostDetails\\styles.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Pagination.jsx",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Pdf\\Pdf.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\Post\\Post.js",["160","161"],"import React, { useState } from 'react';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n\r\n  const [ price ] = useState(parseFloat(post.price) * 100);\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const [isBought, setIsBought] = useState(true)\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { classes } = useStyles();\r\n\r\n  \r\n \r\nconst pay = () => {\r\n \r\n    var yoco = new window.YocoSDK({\r\n      publicKey: 'pk_test_ed3c54a6gOol69qa7f45',\r\n    });\r\n    var checkoutButton = document.querySelector('#checkout-button');\r\n    checkoutButton.addEventListener('click',\r\n    \r\n    function () {\r\n      yoco.showPopup({\r\n\r\n        amountInCents: price,\r\n        currency: 'ZAR',\r\n        name: 'Your Store ',\r\n        description: 'Awesome description',\r\n        callback: function (result) {\r\n          // This function returns a token that your server can use to capture a payment\r\n          if (result.error) {\r\n            const errorMessage = result.error.message;\r\n            alert(\"error occured: \" + errorMessage);\r\n          } else {\r\n            alert(\"card successfully tokenised: \" + result.id);\r\n          }\r\n          // In a real integration - you would now pass this chargeToken back to your\r\n          // server along with the order/basket that the customer has purchased.\r\n        }\r\n      })\r\n    });\r\n   \r\n  };\r\n\r\n\r\nconst Edit = (e) => {\r\n  e.stopPropagation();\r\n  setCurrentId(post._id);\r\n  navigate(\"/uploading\")\r\n}\r\n\r\n const openPost = (e) => {\r\n    navigate(`/posts/${post._id}`);\r\n  }; \r\n\r\n\r\nreturn (\r\n    <Card className={classes.card} raised elevation={6}>\r\n\r\n\r\n      <ButtonBase\r\n        component=\"span\"\r\n        name=\"test\"\r\n        className={classes.cardAction}\r\n        onClick={openPost}\r\n      >\r\n        <CardMedia \r\n        className={classes.media} \r\n        image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'}\r\n        title={post.title} \r\n        /> \r\n      <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.name}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n        <div className={classes.overlay2} name=\"edit\">\r\n          <Button\r\n            onClick={Edit}\r\n            style={{ color: 'white' }}\r\n            size=\"small\"\r\n          >\r\n            <MoreHorizIcon fontSize=\"default\" />\r\n          </Button>\r\n        </div>\r\n        )}\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message.split(' ').splice(0, 20).join(' ')}...</Typography>\r\n        </CardContent>\r\n      </ButtonBase>\r\n     <Typography>R{post.price}</Typography>\r\n       <CardActions className={classes.cardActions}>\r\n       \r\n        <button id=\"checkout-button\" onClick={pay} >Unlock</button>\r\n\r\n\r\n  {\r\n  \r\n  (user?.result?._id === post?.creator) && (\r\n    <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\r\n      <DeleteIcon fontSize=\"small\" /> &nbsp; Delete\r\n    </Button>\r\n  )\r\n  }\r\n  \r\n\r\n\r\n \r\n\r\n      \r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;","C:\\Users\\1867792\\up_pro\\client\\src\\components\\PostDetails\\CommentSection.jsx",[],"C:\\Users\\1867792\\up_pro\\client\\src\\api\\index.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\styles.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\1867792\\up_pro\\client\\src\\components\\Upload.js",[],{"ruleId":"162","severity":1,"message":"163","line":39,"column":6,"nodeType":"164","endLine":39,"endColumn":16,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":28,"column":10,"nodeType":"168","messageId":"169","endLine":28,"endColumn":19},{"ruleId":"166","severity":1,"message":"170","line":15,"column":7,"nodeType":"168","messageId":"169","endLine":15,"endColumn":15},{"ruleId":"162","severity":1,"message":"171","line":23,"column":6,"nodeType":"164","endLine":23,"endColumn":10,"suggestions":"172"},{"ruleId":"162","severity":1,"message":"171","line":29,"column":6,"nodeType":"164","endLine":29,"endColumn":12,"suggestions":"173"},{"ruleId":"166","severity":1,"message":"174","line":33,"column":9,"nodeType":"168","messageId":"169","endLine":33,"endColumn":17},{"ruleId":"166","severity":1,"message":"175","line":43,"column":9,"nodeType":"168","messageId":"169","endLine":43,"endColumn":25},{"ruleId":"162","severity":1,"message":"176","line":25,"column":6,"nodeType":"164","endLine":25,"endColumn":8,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":3,"column":1,"nodeType":"180","endLine":42,"endColumn":3},{"ruleId":"178","severity":1,"message":"179","line":10,"column":2,"nodeType":"180","endLine":17,"endColumn":4},{"ruleId":"166","severity":1,"message":"181","line":1,"column":108,"nodeType":"168","messageId":"169","endLine":1,"endColumn":112},{"ruleId":"162","severity":1,"message":"182","line":32,"column":6,"nodeType":"164","endLine":32,"endColumn":12,"suggestions":"183"},{"ruleId":"166","severity":1,"message":"184","line":21,"column":10,"nodeType":"168","messageId":"169","endLine":21,"endColumn":18},{"ruleId":"166","severity":1,"message":"185","line":21,"column":20,"nodeType":"168","messageId":"169","endLine":21,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["186"],"no-unused-vars","'currentId' is assigned a value but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["187"],["188"],"'openPost' is assigned a value but never used.","'recommendedPosts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'location.pathname', and 'name'. Either include them or remove the dependency array.",["189"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'RATE' is defined but never used.","React Hook useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.",["190"],"'isBought' is assigned a value but never used.","'setIsBought' is assigned a value but never used.",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"201","text":"202"},"Update the dependencies array to be: [dispatch, id]",{"range":"203","text":"204"},"Update the dependencies array to be: [dispatch, post]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch, location.pathname, name]",{"range":"207","text":"208"},"Update the dependencies array to be: [clear, post]",{"range":"209","text":"210"},[1168,1178],"[location, logout, user?.token]",[876,880],"[dispatch, id]",[1019,1025],"[dispatch, post]",[883,885],"[dispatch, location.pathname, name]",[1369,1375],"[clear, post]"]