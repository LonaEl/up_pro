{"ast":null,"code":"import * as React from 'react';\nimport { forwardRef, useImperativeHandle, useRef, useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nvar GeolocateControl = forwardRef(function (props, ref) {\n  var thisRef = useRef({\n    props: props\n  });\n  var ctrl = useControl(function (_ref) {\n    var mapLib = _ref.mapLib;\n    var gc = new mapLib.GeolocateControl(props);\n    // Hack: fix GeolocateControl reuse\n    // When using React strict mode, the component is mounted twice.\n    // GeolocateControl's UI creation is asynchronous. Removing and adding it back causes the UI to be initialized twice.\n    var setupUI = gc._setupUI;\n    gc._setupUI = function (args) {\n      if (!gc._container.hasChildNodes()) {\n        setupUI(args);\n      }\n    };\n    gc.on('geolocate', function (e) {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onGeolocate) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('error', function (e) {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onError) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('outofmaxbounds', function (e) {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onOutOfMaxBounds) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('trackuserlocationstart', function (e) {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onTrackUserLocationStart) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('trackuserlocationend', function (e) {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onTrackUserLocationEnd) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    return gc;\n  }, {\n    position: props.position\n  });\n  thisRef.current.props = props;\n  useImperativeHandle(ref, function () {\n    return {\n      trigger: function trigger() {\n        return ctrl.trigger();\n      }\n    };\n  }, []);\n  useEffect(function () {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n});\nGeolocateControl.displayName = 'GeolocateControl';\nexport default React.memo(GeolocateControl);","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,UAAU,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACxE,SAAQC,eAAe,QAAO,4BAA4B;AAC1D,OAAOC,UAAU,MAAM,eAAe;AAkEtC,IAAMC,gBAAgB,GAAGN,UAAU,CAA6C,UAACO,KAAK,EAAEC,GAAG,EAAI;EAC7F,IAAMC,OAAO,GAAGP,MAAM,CAAC;IAACK,KAAK,EAALA;EAAK,CAAC,CAAC;EAE/B,IAAMG,IAAI,GAAGL,UAAU,CACrB,gBAAa;IAAA,IAAXM,MAAM,QAANA,MAAM;IACN,IAAMC,EAAE,GAAG,IAAID,MAAM,CAACL,gBAAgB,CAACC,KAAK,CAAC;IAE7C;IACA;IACA;IACA,IAAMM,OAAO,GAAGD,EAAE,CAACE,QAAQ;IAC3BF,EAAE,CAACE,QAAQ,GAAG,cAAI,EAAG;MACnB,IAAI,CAACF,EAAE,CAACG,UAAU,CAACC,aAAa,EAAE,EAAE;QAClCH,OAAO,CAACI,IAAI,CAAC;;IAEjB,CAAC;IAEDL,EAAE,CAACM,EAAE,CAAC,WAAW,EAAE,WAAC,EAAG;;MACrB,mBAAO,CAACC,OAAO,CAACZ,KAAK,EAACa,WAAW,mDAAGC,CAAyB,CAAC;IAChE,CAAC,CAAC;IACFT,EAAE,CAACM,EAAE,CAAC,OAAO,EAAE,WAAC,EAAG;;MACjB,mBAAO,CAACC,OAAO,CAACZ,KAAK,EAACe,OAAO,mDAAGD,CAAwB,CAAC;IAC3D,CAAC,CAAC;IACFT,EAAE,CAACM,EAAE,CAAC,gBAAgB,EAAE,WAAC,EAAG;;MAC1B,mBAAO,CAACC,OAAO,CAACZ,KAAK,EAACgB,gBAAgB,mDAAGF,CAAyB,CAAC;IACrE,CAAC,CAAC;IACFT,EAAE,CAACM,EAAE,CAAC,wBAAwB,EAAE,WAAC,EAAG;;MAClC,mBAAO,CAACC,OAAO,CAACZ,KAAK,EAACiB,wBAAwB,mDAAGH,CAAmB,CAAC;IACvE,CAAC,CAAC;IACFT,EAAE,CAACM,EAAE,CAAC,sBAAsB,EAAE,WAAC,EAAG;;MAChC,mBAAO,CAACC,OAAO,CAACZ,KAAK,EAACkB,sBAAsB,mDAAGJ,CAAmB,CAAC;IACrE,CAAC,CAAC;IAEF,OAAOT,EAAE;EACX,CAAC,EACD;IAACc,QAAQ,EAAEnB,KAAK,CAACmB;EAAQ,CAAC,CAC3B;EAEDjB,OAAO,CAACU,OAAO,CAACZ,KAAK,GAAGA,KAAK;EAE7BN,mBAAmB,CACjBO,GAAG,EACH;IAAA,OAAO;MACLmB,OAAO,EAAE;QAAA,OAAMjB,IAAI,CAACiB,OAAO,EAAE;MAAA;KAC9B;EAAA,CAAC,EACF,EAAE,CACH;EAEDxB,SAAS,CAAC,YAAK;IACb;IACAC,eAAe,CAACM,IAAI,CAACK,UAAU,EAAER,KAAK,CAACqB,KAAK,CAAC;EAC/C,CAAC,EAAE,CAACrB,KAAK,CAACqB,KAAK,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb,CAAC,CAAC;AAEFtB,gBAAgB,CAACuB,WAAW,GAAG,kBAAkB;AAEjD,eAAe9B,KAAK,CAAC+B,IAAI,CAACxB,gBAAgB,CAAC","names":["React","forwardRef","useImperativeHandle","useRef","useEffect","applyReactStyle","useControl","GeolocateControl","props","ref","thisRef","ctrl","mapLib","gc","setupUI","_setupUI","_container","hasChildNodes","args","on","current","onGeolocate","e","onError","onOutOfMaxBounds","onTrackUserLocationStart","onTrackUserLocationEnd","position","trigger","style","displayName","memo"],"sourceRoot":"","sources":["../../../src/components/geolocate-control.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}