{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1867792\\\\up_pro\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Box, Checkbox } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Link, useHistory } from 'react-router-dom';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  var _user$result;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const [isTrue, setIstrue] = useState(false);\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      selectedFile: ''\n    });\n  };\n\n  useEffect(() => {\n    if (!(post !== null && post !== void 0 && post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$user;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.name\n      }, history));\n      clear();\n    } else {\n      var _user$user2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$user2 = user.user) === null || _user$user2 === void 0 ? void 0 : _user$user2.name\n      }));\n      clear();\n    }\n  };\n\n  const handleChange = e => {\n    setIstrue(e.target.value);\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result = user.result) !== null && _user$result !== void 0 && _user$result.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create your own memories and like other's memories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  /*   const switchMode = () => {\r\n       setChecked((prevChecked => !prevChecked));\r\n    };\r\n   */\n  //const handleAddChip = (tag) => {\n  // setPostData({ ...postData, tags: [...postData.tags, tag] });\n  //};\n  // const handleDeleteChip = (chipToDelete) => {\n  // setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\n  //};\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.title}\"` : 'Creating '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        minRows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '5px 0',\n          width: '94%'\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags\",\n          fullWidth: true,\n          value: postData.tags // onAdd={(chip) => handleAddChip(chip)}\n          // onDelete={(chip) => handleDeleteChip(chip)}\n          ,\n          onChange: e => setPostData({ ...postData,\n            tags: e.target.value.split(',')\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: isTrue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h8\",\n        children: [\"I agree to the \", /*#__PURE__*/_jsxDEV(Box, {\n          component: Link,\n          to: \"/termsandconditions\",\n          children: \"terms and conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 42\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"q5I0/uLxwTtYYH9j6F/DKWQXiLQ=\", false, function () {\n  return [useSelector, useDispatch, useStyles, useHistory];\n});\n\n_c = Form;\nexport default Form; //  <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","Box","Checkbox","useDispatch","useSelector","FileBase","Link","useHistory","createPost","updatePost","useStyles","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","isTrue","setIstrue","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","name","handleChange","target","value","result","paper","root","form","padding","width","split","fileInput","base64","buttonSubmit"],"sources":["C:/Users/1867792/up_pro/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper, Box, Checkbox} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\r\n  const [isTrue, setIstrue] = useState(false);\r\n\r\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const history = useHistory();\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ title: '', message: '',  selectedFile: '' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!post?.title) clear();\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost({ ...postData, name: user?.user?.name }, history));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, { ...postData, name: user?.user?.name }));\r\n      clear();\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setIstrue(e.target.value)\r\n  }\r\n\r\n  if (!user?.result?.name) {\r\n    return (\r\n      <Paper className={classes.paper} elevation={6}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign In to create your own memories and like other's memories.\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n/*   const switchMode = () => {\r\n     setChecked((prevChecked => !prevChecked));\r\n  };\r\n */\r\n\r\n  //const handleAddChip = (tag) => {\r\n   // setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n  //};\r\n\r\n // const handleDeleteChip = (chipToDelete) => {\r\n   // setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\r\n  //};\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={6}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post?.title}\"` : 'Creating '}</Typography>\r\n       \r\n       \r\n        <TextField \r\n        name=\"title\" \r\n        variant=\"outlined\" \r\n        label=\"Title\" \r\n        fullWidth \r\n        value={postData.title} \r\n        onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n         />\r\n        \r\n        <TextField \r\n        name=\"message\" \r\n        variant=\"outlined\" \r\n        label=\"Message\" \r\n        fullWidth\r\n         multiline \r\n         minRows={4} \r\n         value={postData.message} \r\n         onChange={(e) => setPostData({ ...postData, message: e.target.value })} \r\n         />\r\n        <div style={{ padding: '5px 0', width: '94%' }}>\r\n        \r\n         <TextField\r\n            name=\"tags\"\r\n            variant=\"outlined\"\r\n            label=\"Tags\"\r\n            fullWidth\r\n           value={postData.tags}\r\n           // onAdd={(chip) => handleAddChip(chip)}\r\n           // onDelete={(chip) => handleDeleteChip(chip)}\r\n            onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} \r\n              />\r\n        </div>\r\n\r\n        <div className={classes.fileInput}>\r\n          <FileBase type=\"file\" \r\n          multiple={false} \r\n          onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\r\n          </div>\r\n<Checkbox\r\n            checked={isTrue}\r\n            onChange={handleChange} />\r\n <Typography variant='h8'>I agree to the <Box component={Link} to=\"/termsandconditions\">terms and conditions</Box> </Typography>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Upload</Button>\r\n      </form>\r\n  </Paper>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Form;\r\n//  <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>"],"mappings":"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"},"metadata":{},"sourceType":"module"}