{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/1867792/up_pro/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/1867792/up_pro/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/1867792/up_pro/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\1867792\\\\up_pro\\\\client\\\\src\\\\components\\\\screens\\\\ResetPasswordScreen.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ResetPasswordScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ResetPasswordScreen = function ResetPasswordScreen(_ref) {\n  _s();\n  var history = _ref.history,\n    match = _ref.match;\n  var _useParams = useParams(),\n    resetTok = _useParams.resetTok;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    success = _useState8[0],\n    setSuccess = _useState8[1];\n  var resetPasswordHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var _yield$axios$put, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              /*  const config = {\r\n                 header: {\r\n                   \"Content-Type\": \"application/json\",\r\n                 },\r\n               }; */\n              if (!(password !== confirmPassword)) {\n                _context.next = 6;\n                break;\n              }\n              setPassword(\"\");\n              setConfirmPassword(\"\");\n              setTimeout(function () {\n                setError(\"\");\n              }, 5000);\n              return _context.abrupt(\"return\", setError(\"Passwords do not match\"));\n            case 6:\n              _context.prev = 6;\n              _context.next = 9;\n              return axios.put(\"/api/auth/passwordreset/\".concat(resetToken), {\n                password: password\n              }\n              /*  config */);\n            case 9:\n              _yield$axios$put = _context.sent;\n              data = _yield$axios$put.data;\n              console.log(data);\n              setSuccess(data.data);\n              _context.next = 19;\n              break;\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](6);\n              setError(_context.t0.response.data.error);\n              setTimeout(function () {\n                setError(\"\");\n              }, 5000);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 15]]);\n    }));\n    return function resetPasswordHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPasswordHandler,\n      className: \"resetpassword-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"resetpassword-screen__title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, _this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: [success, \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          placeholder: \"Enter new password\",\n          autoComplete: \"true\",\n          value: password,\n          onChange: function onChange(e) {\n            return setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmpassword\",\n          placeholder: \"Confirm new password\",\n          autoComplete: \"true\",\n          value: confirmPassword,\n          onChange: function onChange(e) {\n            return setConfirmPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n_s(ResetPasswordScreen, \"tmlBa465VNPW70814QSL4T2i/No=\", false, function () {\n  return [useParams];\n});\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"names":["useState","Link","useParams","axios","ResetPasswordScreen","history","match","resetTok","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","setTimeout","put","resetToken","data","console","log","response","target","value"],"sources":["C:/Users/1867792/up_pro/client/src/components/screens/ResetPasswordScreen.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./ResetPasswordScreen.css\";\r\n\r\nconst ResetPasswordScreen = ({ history, match }) => {\r\n  let { resetTok } = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const resetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n   /*  const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }; */\r\n\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/auth/passwordreset/${resetToken}`,\r\n        {\r\n          password,\r\n        },\r\n       /*  config */\r\n      );\r\n\r\n      console.log(data);\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetpassword-screen\">\r\n      <form\r\n        onSubmit={resetPasswordHandler}\r\n        className=\"resetpassword-screen__form\"\r\n      >\r\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error} </span>}\r\n        {success && (\r\n          <span className=\"success-message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            autoComplete=\"true\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            placeholder=\"Confirm new password\"\r\n            autoComplete=\"true\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}