{"ast":null,"code":"export default function makeCancellablePromise(promise) {\n  var isCancelled = false;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(function () {\n      return !isCancelled && resolve.apply(void 0, arguments);\n    })[\"catch\"](function (error) {\n      return !isCancelled && reject(error);\n    });\n  });\n  return {\n    promise: wrappedPromise,\n    cancel: function cancel() {\n      isCancelled = true;\n    }\n  };\n}","map":{"version":3,"names":["makeCancellablePromise","promise","isCancelled","wrappedPromise","Promise","resolve","reject","then","apply","arguments","error","cancel"],"sources":["C:/Users/1867792/up_pro/client/node_modules/make-cancellable-promise/dist/esm/index.js"],"sourcesContent":["export default function makeCancellablePromise(promise) {\r\n  var isCancelled = false;\r\n  var wrappedPromise = new Promise(function (resolve, reject) {\r\n    promise.then(function () {\r\n      return !isCancelled && resolve.apply(void 0, arguments);\r\n    })[\"catch\"](function (error) {\r\n      return !isCancelled && reject(error);\r\n    });\r\n  });\r\n  return {\r\n    promise: wrappedPromise,\r\n    cancel: function cancel() {\r\n      isCancelled = true;\r\n    }\r\n  };\r\n}"],"mappings":"AAAA,eAAe,SAASA,sBAAsB,CAACC,OAAO,EAAE;EACtD,IAAIC,WAAW,GAAG,KAAK;EACvB,IAAIC,cAAc,GAAG,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC1DL,OAAO,CAACM,IAAI,CAAC,YAAY;MACvB,OAAO,CAACL,WAAW,IAAIG,OAAO,CAACG,KAAK,CAAC,KAAK,CAAC,EAAEC,SAAS,CAAC;IACzD,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,UAAUC,KAAK,EAAE;MAC3B,OAAO,CAACR,WAAW,IAAII,MAAM,CAACI,KAAK,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAO;IACLT,OAAO,EAAEE,cAAc;IACvBQ,MAAM,EAAE,SAASA,MAAM,GAAG;MACxBT,WAAW,GAAG,IAAI;IACpB;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}