{"ast":null,"code":"/* import { useState } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { ratePost } from \"../../actions/posts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst colors = {\r\n    orange: \"#FFBA5A\",\r\n    grey: \"#a9a9a9\"\r\n    \r\n};\r\n\r\n\r\n\r\nconst Lon = ({ post }) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const [rating, setRating] = useState(0);\r\n  const [hoverValue, setHoverValue] = useState(undefined);\r\n  \r\n  const dispatch = useDispatch();\r\n  const [rates, setRates] = useState(post?.rates);\r\n  const star = Array(5).fill(0)\r\n\r\n  const handleClick = value => {\r\n    setRating(value)\r\n  };\r\n\r\n   const labels = {\r\n    0.5: 'Useless',\r\n    1: 'Useless+',\r\n    1.5: 'Poor',\r\n    2: 'Poor+',\r\n    2.5: 'Ok',\r\n    3: 'Ok+',\r\n    3.5: 'Good',\r\n    4: 'Good+',\r\n    4.5: 'Excellent',\r\n    5: 'Excellent+',\r\n  };\r\n  \r\n  const getLabelText = (rating) => {\r\n    return `${rating} Star${rating!== 1 ? 's' : ''}, ${labels[rating]}`;\r\n  }\r\n\r\n  const handleMouseOver = newHoverValue => {\r\n    setHoverValue(newHoverValue)\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoverValue(undefined)\r\n  };\r\n\r\n  const handleSubmit = async(e) => {\r\n e.preventDefault();\r\n    const newRate =  await dispatch(ratePost(`${user?.result?.username}: ${rating}`, post._id));\r\n    setRates(newRate); \r\n    \r\n  };\r\n\r\n  const Sta = () => {\r\n    if (rates.length > 0) \r\n      return rates.find((rates) => rates) \r\n  };\r\n\r\n\r\n\r\nreturn (\r\n    <div style={styles.container}>\r\n        <form onSubmit={handleSubmit}>\r\n      <h2> React Ratings </h2>\r\n      <div style={styles.stars}>\r\n        {star.map((_, index) => {\r\n          return (\r\n            <FaStar\r\n              key={index}\r\n              size={24}\r\n              getLabelText={getLabelText}\r\n              onClick={() => handleClick(index + 1)}\r\n              onMouseEnter={() => handleMouseOver(index + 1) && getLabelText()}\r\n              onMouseLeave={handleMouseLeave}\r\n              color={(hoverValue || rating) > index ? colors.orange : colors.grey}\r\n              style={{\r\n                marginRight: 10,\r\n                cursor: \"pointer\"\r\n              }}\r\n              \r\n            />\r\n          \r\n          )\r\n        })}\r\n      </div>\r\n      <Sta />\r\n      <button type=\"submit\">\r\n        post rating\r\n      </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  stars: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  textarea: {\r\n    border: \"1px solid #a9a9a9\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    margin: \"20px 0\",\r\n    minHeight: 100,\r\n    width: 300\r\n  },\r\n  button: {\r\n    border: \"1px solid #a9a9a9\",\r\n    borderRadius: 5,\r\n    width: 300,\r\n    padding: 10,\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default Lon;  */","map":{"version":3,"names":[],"sources":["C:/Users/1867792/up_pro/client/src/components/Rating/Lon.js"],"sourcesContent":["/* import { useState } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport { ratePost } from \"../../actions/posts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst colors = {\r\n    orange: \"#FFBA5A\",\r\n    grey: \"#a9a9a9\"\r\n    \r\n};\r\n\r\n\r\n\r\nconst Lon = ({ post }) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const [rating, setRating] = useState(0);\r\n  const [hoverValue, setHoverValue] = useState(undefined);\r\n  \r\n  const dispatch = useDispatch();\r\n  const [rates, setRates] = useState(post?.rates);\r\n  const star = Array(5).fill(0)\r\n\r\n  const handleClick = value => {\r\n    setRating(value)\r\n  };\r\n\r\n   const labels = {\r\n    0.5: 'Useless',\r\n    1: 'Useless+',\r\n    1.5: 'Poor',\r\n    2: 'Poor+',\r\n    2.5: 'Ok',\r\n    3: 'Ok+',\r\n    3.5: 'Good',\r\n    4: 'Good+',\r\n    4.5: 'Excellent',\r\n    5: 'Excellent+',\r\n  };\r\n  \r\n  const getLabelText = (rating) => {\r\n    return `${rating} Star${rating!== 1 ? 's' : ''}, ${labels[rating]}`;\r\n  }\r\n\r\n  const handleMouseOver = newHoverValue => {\r\n    setHoverValue(newHoverValue)\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoverValue(undefined)\r\n  };\r\n\r\n  const handleSubmit = async(e) => {\r\n e.preventDefault();\r\n    const newRate =  await dispatch(ratePost(`${user?.result?.username}: ${rating}`, post._id));\r\n    setRates(newRate); \r\n    \r\n  };\r\n\r\n  const Sta = () => {\r\n    if (rates.length > 0) \r\n      return rates.find((rates) => rates) \r\n  };\r\n\r\n\r\n\r\nreturn (\r\n    <div style={styles.container}>\r\n        <form onSubmit={handleSubmit}>\r\n      <h2> React Ratings </h2>\r\n      <div style={styles.stars}>\r\n        {star.map((_, index) => {\r\n          return (\r\n            <FaStar\r\n              key={index}\r\n              size={24}\r\n              getLabelText={getLabelText}\r\n              onClick={() => handleClick(index + 1)}\r\n              onMouseEnter={() => handleMouseOver(index + 1) && getLabelText()}\r\n              onMouseLeave={handleMouseLeave}\r\n              color={(hoverValue || rating) > index ? colors.orange : colors.grey}\r\n              style={{\r\n                marginRight: 10,\r\n                cursor: \"pointer\"\r\n              }}\r\n              \r\n            />\r\n          \r\n          )\r\n        })}\r\n      </div>\r\n      <Sta />\r\n      <button type=\"submit\">\r\n        post rating\r\n      </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  stars: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  textarea: {\r\n    border: \"1px solid #a9a9a9\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    margin: \"20px 0\",\r\n    minHeight: 100,\r\n    width: 300\r\n  },\r\n  button: {\r\n    border: \"1px solid #a9a9a9\",\r\n    borderRadius: 5,\r\n    width: 300,\r\n    padding: 10,\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default Lon;  */"],"mappings},"metadata":{},"sourceType":"module"}