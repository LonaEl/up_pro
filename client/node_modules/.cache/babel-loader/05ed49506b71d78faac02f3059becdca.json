{"ast":null,"code":"import axios from 'axios';\nvar API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(function (req) {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = \"Bearer \".concat(JSON.parse(localStorage.getItem('profile')).token);\n  }\n  return req;\n});\nexport var fetchPrice = function fetchPrice(id) {\n  return API.get(\"/posts/\".concat(id));\n};\nexport var fetchPost = function fetchPost(id) {\n  return API.get(\"/posts/\".concat(id));\n};\nexport var fetchPosts = function fetchPosts(page) {\n  return API.get(\"/posts?page=\".concat(page));\n};\nexport var fetchPostsByCreator = function fetchPostsByCreator(name) {\n  return API.get(\"/posts/creator?name=\".concat(name));\n};\nexport var fetchPostsBySearch = function fetchPostsBySearch(searchQuery) {\n  return API.get(\"/posts/search?searchQuery=\".concat(searchQuery.search || 'none', \"&tags=\").concat(searchQuery.tags));\n};\nexport var createPost = function createPost(newPost) {\n  return API.post('/posts', newPost);\n};\nexport var likePost = function likePost(id) {\n  return API.patch(\"/posts/\".concat(id, \"/likePost\"));\n};\nexport var comment = function comment(value, id) {\n  return API.post(\"/posts/\".concat(id, \"/commentPost\"), {\n    value: value\n  });\n};\nexport var rate = function rate(value, id) {\n  return API.post(\"/posts/\".concat(id, \"/ratePost\"), {\n    value: value\n  });\n};\nexport var updatePost = function updatePost(id, updatedPost) {\n  return API.patch(\"/posts/\".concat(id), updatedPost);\n};\nexport var deletePost = function deletePost(id) {\n  return API.delete(\"/posts/\".concat(id));\n};\nexport var claim = function claim(newClaim) {\n  return API.post('/claim', newClaim);\n};\n\n/*\r\nconst url = 'http://localhost:5000'\r\nexport const function = () => axios.get(url);   will get all the files in the url\r\n */","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPrice","id","get","fetchPost","fetchPosts","page","fetchPostsByCreator","name","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","patch","comment","value","rate","updatePost","updatedPost","deletePost","delete","claim","newClaim"],"sources":["C:/Users/1867792/up_pro/client/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n  }\r\n\r\n  return req;\r\n});\r\n\r\nexport const fetchPrice = (id) => API.get(`/posts/${id}`)\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const fetchPostsByCreator = (name) => API.get(`/posts/creator?name=${name}`);\r\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\r\nexport const rate = (value, id) => API.post(`/posts/${id}/ratePost`, { value });\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\n\r\n\r\n\r\nexport const claim = (newClaim) => API.post('/claim', newClaim);\r\n\r\n/*\r\nconst url = 'http://localhost:5000'\r\nexport const function = () => axios.get(url);   will get all the files in the url\r\n */"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAwB,CAAC,CAAC;AAE9DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAACC,GAAG,EAAK;EACpC,IAAIC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAE;IACnCF,GAAG,CAACG,OAAO,CAACC,aAAa,oBAAaC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAK,CAAE;EAC3F;EAEA,OAAOP,GAAG;AACZ,CAAC,CAAC;AAEF,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAU,CAAIC,EAAE;EAAA,OAAKf,GAAG,CAACgB,GAAG,kBAAWD,EAAE,EAAG;AAAA;AACzD,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAS,CAAIF,EAAE;EAAA,OAAKf,GAAG,CAACgB,GAAG,kBAAWD,EAAE,EAAG;AAAA;AACxD,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAI;EAAA,OAAKnB,GAAG,CAACgB,GAAG,uBAAgBG,IAAI,EAAG;AAAA;AAClE,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,IAAI;EAAA,OAAKrB,GAAG,CAACgB,GAAG,+BAAwBK,IAAI,EAAG;AAAA;AACnF,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,WAAW;EAAA,OAAKvB,GAAG,CAACgB,GAAG,qCAA8BO,WAAW,CAACC,MAAM,IAAI,MAAM,mBAASD,WAAW,CAACE,IAAI,EAAG;AAAA;AAChJ,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,OAAO;EAAA,OAAK3B,GAAG,CAAC4B,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC;AAAA;AAClE,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAQ,CAAId,EAAE;EAAA,OAAKf,GAAG,CAAC8B,KAAK,kBAAWf,EAAE,eAAY;AAAA;AAClE,OAAO,IAAMgB,OAAO,GAAG,SAAVA,OAAO,CAAIC,KAAK,EAAEjB,EAAE;EAAA,OAAKf,GAAG,CAAC4B,IAAI,kBAAWb,EAAE,mBAAgB;IAAEiB,KAAK,EAALA;EAAM,CAAC,CAAC;AAAA;AACrF,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAID,KAAK,EAAEjB,EAAE;EAAA,OAAKf,GAAG,CAAC4B,IAAI,kBAAWb,EAAE,gBAAa;IAAEiB,KAAK,EAALA;EAAM,CAAC,CAAC;AAAA;AAC/E,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAU,CAAInB,EAAE,EAAEoB,WAAW;EAAA,OAAKnC,GAAG,CAAC8B,KAAK,kBAAWf,EAAE,GAAIoB,WAAW,CAAC;AAAA;AACrF,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIrB,EAAE;EAAA,OAAKf,GAAG,CAACqC,MAAM,kBAAWtB,EAAE,EAAG;AAAA;AAI5D,OAAO,IAAMuB,KAAK,GAAG,SAARA,KAAK,CAAIC,QAAQ;EAAA,OAAKvC,GAAG,CAAC4B,IAAI,CAAC,QAAQ,EAAEW,QAAQ,CAAC;AAAA;;AAE/D;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}